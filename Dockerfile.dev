# Dockerfile para desenvolvimento do Transcritor
# Inclui ferramentas de desenvolvimento e hot-reload

FROM python:3.10-slim-bullseye

# Evitar prompts interativos durante instala√ß√£o
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Instalar depend√™ncias do sistema
RUN apt-get update && apt-get install -y \
    ffmpeg \
    git \
    wget \
    curl \
    build-essential \
    vim \
    nano \
    htop \
    tree \
    && rm -rf /var/lib/apt/lists/*

# Criar usu√°rio n√£o-root para desenvolvimento
RUN useradd -m -u 1000 transcriptor && \
    mkdir -p /app /input /output && \
    chown -R transcriptor:transcriptor /app /input /output

# Definir diret√≥rio de trabalho
WORKDIR /app

# Copiar arquivos de depend√™ncias
COPY requirements.txt .
COPY requirements-dev.txt .

# Instalar depend√™ncias Python (CPU version for dev)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir torch torchaudio --index-url https://download.pytorch.org/whl/cpu && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-dev.txt

# Ajustar permiss√µes
RUN chown -R transcriptor:transcriptor /app

# Mudar para usu√°rio n√£o-root
USER transcriptor

# Criar diret√≥rios de trabalho
RUN mkdir -p /app/output /app/temp /app/logs

# Definir volumes para desenvolvimento
VOLUME ["/app", "/input", "/output"]

# Vari√°veis de ambiente para desenvolvimento
ENV INPUT_DIR=/input
ENV OUTPUT_DIR=/output
ENV TEMP_DIR=/app/temp
ENV HF_HOME=/app/.cache/huggingface
ENV TORCH_HOME=/app/.cache/torch
ENV USE_GPU=false
ENV PYTHONPATH=/app
ENV FLASK_ENV=development
ENV FLASK_DEBUG=1

# Expor portas para desenvolvimento
EXPOSE 8000 5000

# Comando padr√£o para desenvolvimento
CMD ["python3", "-c", "print('üîß Ambiente de desenvolvimento pronto!'); import time; time.sleep(999999)"]

# Labels para metadata
LABEL maintainer="Transcritor Team"
LABEL version="1.0-dev"
LABEL description="Ambiente de desenvolvimento para Transcritor"
LABEL environment="development"